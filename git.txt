- To list available environments in conda
conda env list
or
conda info --envs


- To create a venv
conda create --name env_name python=3.11

- To activate a venv
conda activate env_name

- To deactivate a venv
conda deactivate

- to clon a repo / to pull
pip install https://git_url

- Navigating oneself at shell prompt
cd ../../../example_directory

- Export the environment configuration
conda env_name export --file environment.yml

- Create a new environment based on the exported configuration in another environment:
conda env create -f environment.yml

- to delete an env
conda env remove --name your_env_name


#############
## to push ##

- to download a git project
git clone SSH_KEY

- to check on which branch are we at the moment
git branch

- to create a new branch
git checkout -b branch_name

- to change from branches
git checkout branch_name
git switch branch_name

- go to the repo
cd /path/to/local/repository

- check the status of the repo
git status

- select it~
git add .
git commit -m "Your commit message"

- check the push back url
git remote -v

- change the push back url if necessary
git remote set-url origin <new_repository_url>

- if there is no push back url, then add it
git remote add origin <repository_url>

- push to Github
git push origin branch_name
git push -u origin branch_name

###########################
- To update a local git project
-- this one just takes the most recent one from the remote but doesnt apply yet
git fetch origin

-- we can update a specific branch with this code
git pull origin branch_name

-- we can update main branch here
git pull origin main

-- we can also merge
git merge origin/your-branch-name


- to add all changes 
git add -A

- to see the history/log of git activities
git log
then we have to press q to quit

- to drop committed staged files (this one writes it into logs/history)
git rm --cached file.py
- OR BETTER VERSION THIS SAVES EVERYTHING EVERYTHING (this one doesnt write into logs/history and just drops the staged files)
git reset file.py

- to save changes (but this one also doesnt save it properly)
git stash
- to get back all changes after this we need to run this command 
git stash apply

- to drop changes (but be careful with the content of the file because it also delete all unsaved changes AND THEY MUST BE SAVED BY GIT NOT JUST FROM SYSTEM ITSELF )
git reset --hard HEAD  


### installation ###

- ssh key generation
ssh-keygen -t rsa -b 4096

- we can access ssh key directly on a command line on windows
type key_name.pub

- if github doesnt recognise us, then we need ssh agent to force him to recognise/to add the ssh key 
-- ssh agent activation
ssh-agent -s

-- ssh key addition to ssh agent
ssh-add ssh_file_path/ssh_key 

-- if everything works fine then this code must run without error
ssh -T git@github.com








******************** To add a branch to an existing GitHub in VS Code

git init.
git add README.md
git commit -m "first commit"
git branch -M branch_name
git remote add origin https://github.com/my_project.git
git push -u origin branch_name

